[gd_resource type="Shader" format=3 uid="uid://bheq8jkvpo1qn"]

[resource]
code = "shader_type spatial;

void vertex() {
	//Time*Seamkin tinggi semakin cepat, VERTEX.x*Semakin tinggi semakin panjang xnya
	//* 1.0 -> Tinggi Ynya
	VERTEX.y += sin(TIME * 8.0 + VERTEX.x * 24.0) * 2.0;
	VERTEX.x += VERTEX.x * 20.0;
	//VERTEX.z += VERTEX.z * 20.2;
	// Called for every vertex the material is visible on.
}

void fragment() {
	vec3 color;
	color.r = sin(TIME * 2.0 + VERTEX.x * 0.01) * 1.0;
	//Time*Semakin dikit semakin cepat, Vertex.X*Semakin tinggi semakin panjang, Intensitas warna
	color.g = sin(TIME * 4.0 + VERTEX.x * 0.01) * 1.0;
	color.b = sin(TIME * 8.0 + VERTEX.x * 0.1) * 1.0;
	
	ALBEDO = color;
	//ROUGHNESS = 0.2;
	//METALLIC = 0.55;
	// Called for every pixel the material is visible on.
}

//void light() {
	// Called for every pixel for every light affecting the material.
	// Uncomment to replace the default light processing function with this one.
//}
"
