[gd_scene load_steps=5 format=3 uid="uid://cgfgr74fxanrh"]

[ext_resource type="Texture2D" uid="uid://dg6fs4eqviyij" path="res://icon.svg" id="1_qvtxy"]

[sub_resource type="Shader" id="Shader_v6qya"]
code = "shader_type spatial;

uniform vec4 albedo : source_color;
uniform sampler2D albedo_texture :
	source_color,filter_linear_mipmap,repeat_enable;

uniform vec2 tiling = vec2(1.0);
uniform vec2 offset;

void vertex() {
	UV = UV * tiling + offset * TIME ;
	// Called for every vertex the material is visible on.
}

void fragment() {
	vec4 albedo_tex = texture(albedo_texture, UV);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	ALPHA *= albedo.a * albedo_tex.a;
	//ALPHA *= texture(mask, UV).r;
}

//void light() {
	// Called for every pixel for every light affecting the material.
	// Uncomment to replace the default light processing function with this one.
//}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_pts5g"]
render_priority = 0
shader = SubResource("Shader_v6qya")
shader_parameter/albedo = Color(0.717647, 0.717647, 0.717647, 1)
shader_parameter/tiling = Vector2(2, 2)
shader_parameter/offset = Vector2(1, 0)
shader_parameter/albedo_texture = ExtResource("1_qvtxy")

[sub_resource type="QuadMesh" id="QuadMesh_66tpk"]
material = SubResource("ShaderMaterial_pts5g")

[node name="Node3D" type="Node3D"]

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
mesh = SubResource("QuadMesh_66tpk")
